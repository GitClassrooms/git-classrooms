/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as LoginImport } from "./routes/login"
import { Route as AuthImport } from "./routes/_auth"
import { Route as IndexImport } from "./routes/index"
import { Route as AuthDashboardIndexImport } from "./routes/_auth/dashboard/index"
import { Route as AuthClassroomsIndexImport } from "./routes/_auth/classrooms/index"
import { Route as AuthDashboardCreateImport } from "./routes/_auth/dashboard/create"
import { Route as AuthClassroomsCreateImport } from "./routes/_auth/classrooms/create"
import { Route as AuthClassroomsClassroomIdIndexImport } from "./routes/_auth/classrooms/$classroomId/index"
import { Route as AuthClassroomsClassroomIdInviteImport } from "./routes/_auth/classrooms/$classroomId/invite"
import { Route as AuthClassroomsClassroomIdTeamsRouteImport } from "./routes/_auth/classrooms/$classroomId/teams/route"
import { Route as AuthClassroomsClassroomIdSettingsRouteImport } from "./routes/_auth/classrooms/$classroomId/settings/route"
import { Route as AuthClassroomsClassroomIdAssignmentsRouteImport } from "./routes/_auth/classrooms/$classroomId/assignments/route"
import { Route as AuthClassroomsClassroomIdTeamsIndexImport } from "./routes/_auth/classrooms/$classroomId/teams/index"
import { Route as AuthClassroomsClassroomIdSettingsIndexImport } from "./routes/_auth/classrooms/$classroomId/settings/index"
import { Route as AuthClassroomsClassroomIdMembersIndexImport } from "./routes/_auth/classrooms/$classroomId/members/index"
import { Route as AuthClassroomsClassroomIdGradingIndexImport } from "./routes/_auth/classrooms/$classroomId/grading.index"
import { Route as AuthClassroomsClassroomIdSettingsGradingImport } from "./routes/_auth/classrooms/$classroomId/settings/grading"
import { Route as AuthClassroomsClassroomIdInvitationsInvitationIdImport } from "./routes/_auth/classrooms/$classroomId/invitations/$invitationId"
import { Route as AuthClassroomsClassroomIdAssignmentsCreateImport } from "./routes/_auth/classrooms/$classroomId/assignments/create"
import { Route as AuthClassroomsClassroomIdTeamsTeamIdRouteImport } from "./routes/_auth/classrooms/$classroomId/teams/$teamId/route"
import { Route as AuthClassroomsClassroomIdTeamsJoinIndexImport } from "./routes/_auth/classrooms/$classroomId/teams/join.index"
import { Route as AuthClassroomsClassroomIdAssignmentsAssignmentIdIndexImport } from "./routes/_auth/classrooms/$classroomId/assignments/$assignmentId/index"
import { Route as AuthClassroomsClassroomIdProjectsProjectIdAcceptImport } from "./routes/_auth/classrooms/$classroomId/projects/$projectId/accept"
import { Route as AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteImport } from "./routes/_auth/classrooms/$classroomId/assignments/$assignmentId/settings/route"
import { Route as AuthClassroomsClassroomIdTeamsTeamIdGradingIndexImport } from "./routes/_auth/classrooms/$classroomId/teams/$teamId/grading.index"
import { Route as AuthClassroomsClassroomIdProjectsProjectIdGradingIndexImport } from "./routes/_auth/classrooms/$classroomId/projects/$projectId/grading.index"
import { Route as AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsIndexImport } from "./routes/_auth/classrooms/$classroomId/assignments/$assignmentId/settings/index"
import { Route as AuthClassroomsClassroomIdAssignmentsAssignmentIdGradingIndexImport } from "./routes/_auth/classrooms/$classroomId/assignments/$assignmentId/grading.index"
import { Route as AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsGradingImport } from "./routes/_auth/classrooms/$classroomId/assignments/$assignmentId/settings/grading"

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: "/login",
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const AuthDashboardIndexRoute = AuthDashboardIndexImport.update({
  path: "/dashboard/",
  getParentRoute: () => AuthRoute,
} as any)

const AuthClassroomsIndexRoute = AuthClassroomsIndexImport.update({
  path: "/classrooms/",
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardCreateRoute = AuthDashboardCreateImport.update({
  path: "/dashboard/create",
  getParentRoute: () => AuthRoute,
} as any)

const AuthClassroomsCreateRoute = AuthClassroomsCreateImport.update({
  path: "/classrooms/create",
  getParentRoute: () => AuthRoute,
} as any)

const AuthClassroomsClassroomIdIndexRoute =
  AuthClassroomsClassroomIdIndexImport.update({
    path: "/classrooms/$classroomId/",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdInviteRoute =
  AuthClassroomsClassroomIdInviteImport.update({
    path: "/classrooms/$classroomId/invite",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdTeamsRouteRoute =
  AuthClassroomsClassroomIdTeamsRouteImport.update({
    path: "/classrooms/$classroomId/teams",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdSettingsRouteRoute =
  AuthClassroomsClassroomIdSettingsRouteImport.update({
    path: "/classrooms/$classroomId/settings",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsRouteRoute =
  AuthClassroomsClassroomIdAssignmentsRouteImport.update({
    path: "/classrooms/$classroomId/assignments",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdTeamsIndexRoute =
  AuthClassroomsClassroomIdTeamsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthClassroomsClassroomIdTeamsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdSettingsIndexRoute =
  AuthClassroomsClassroomIdSettingsIndexImport.update({
    path: "/",
    getParentRoute: () => AuthClassroomsClassroomIdSettingsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdMembersIndexRoute =
  AuthClassroomsClassroomIdMembersIndexImport.update({
    path: "/classrooms/$classroomId/members/",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdGradingIndexRoute =
  AuthClassroomsClassroomIdGradingIndexImport.update({
    path: "/classrooms/$classroomId/grading/",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdSettingsGradingRoute =
  AuthClassroomsClassroomIdSettingsGradingImport.update({
    path: "/grading",
    getParentRoute: () => AuthClassroomsClassroomIdSettingsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdInvitationsInvitationIdRoute =
  AuthClassroomsClassroomIdInvitationsInvitationIdImport.update({
    path: "/classrooms/$classroomId/invitations/$invitationId",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsCreateRoute =
  AuthClassroomsClassroomIdAssignmentsCreateImport.update({
    path: "/create",
    getParentRoute: () => AuthClassroomsClassroomIdAssignmentsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdTeamsTeamIdRouteRoute =
  AuthClassroomsClassroomIdTeamsTeamIdRouteImport.update({
    path: "/$teamId",
    getParentRoute: () => AuthClassroomsClassroomIdTeamsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdTeamsJoinIndexRoute =
  AuthClassroomsClassroomIdTeamsJoinIndexImport.update({
    path: "/join/",
    getParentRoute: () => AuthClassroomsClassroomIdTeamsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsAssignmentIdIndexRoute =
  AuthClassroomsClassroomIdAssignmentsAssignmentIdIndexImport.update({
    path: "/$assignmentId/",
    getParentRoute: () => AuthClassroomsClassroomIdAssignmentsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdProjectsProjectIdAcceptRoute =
  AuthClassroomsClassroomIdProjectsProjectIdAcceptImport.update({
    path: "/classrooms/$classroomId/projects/$projectId/accept",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteRoute =
  AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteImport.update({
    path: "/$assignmentId/settings",
    getParentRoute: () => AuthClassroomsClassroomIdAssignmentsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdTeamsTeamIdGradingIndexRoute =
  AuthClassroomsClassroomIdTeamsTeamIdGradingIndexImport.update({
    path: "/grading/",
    getParentRoute: () => AuthClassroomsClassroomIdTeamsTeamIdRouteRoute,
  } as any)

const AuthClassroomsClassroomIdProjectsProjectIdGradingIndexRoute =
  AuthClassroomsClassroomIdProjectsProjectIdGradingIndexImport.update({
    path: "/classrooms/$classroomId/projects/$projectId/grading/",
    getParentRoute: () => AuthRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsIndexRoute =
  AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsIndexImport.update({
    path: "/",
    getParentRoute: () =>
      AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsAssignmentIdGradingIndexRoute =
  AuthClassroomsClassroomIdAssignmentsAssignmentIdGradingIndexImport.update({
    path: "/$assignmentId/grading/",
    getParentRoute: () => AuthClassroomsClassroomIdAssignmentsRouteRoute,
  } as any)

const AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsGradingRoute =
  AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsGradingImport.update({
    path: "/grading",
    getParentRoute: () =>
      AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/_auth": {
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    "/login": {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    "/_auth/classrooms/create": {
      preLoaderRoute: typeof AuthClassroomsCreateImport
      parentRoute: typeof AuthImport
    }
    "/_auth/dashboard/create": {
      preLoaderRoute: typeof AuthDashboardCreateImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/": {
      preLoaderRoute: typeof AuthClassroomsIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/dashboard/": {
      preLoaderRoute: typeof AuthDashboardIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/assignments": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsRouteImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/settings": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdSettingsRouteImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/teams": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdTeamsRouteImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/invite": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdInviteImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/teams/$teamId": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdTeamsTeamIdRouteImport
      parentRoute: typeof AuthClassroomsClassroomIdTeamsRouteImport
    }
    "/_auth/classrooms/$classroomId/assignments/create": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsCreateImport
      parentRoute: typeof AuthClassroomsClassroomIdAssignmentsRouteImport
    }
    "/_auth/classrooms/$classroomId/invitations/$invitationId": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdInvitationsInvitationIdImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/settings/grading": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdSettingsGradingImport
      parentRoute: typeof AuthClassroomsClassroomIdSettingsRouteImport
    }
    "/_auth/classrooms/$classroomId/grading/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdGradingIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/members/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdMembersIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/settings/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdSettingsIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdSettingsRouteImport
    }
    "/_auth/classrooms/$classroomId/teams/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdTeamsIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdTeamsRouteImport
    }
    "/_auth/classrooms/$classroomId/assignments/$assignmentId/settings": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteImport
      parentRoute: typeof AuthClassroomsClassroomIdAssignmentsRouteImport
    }
    "/_auth/classrooms/$classroomId/projects/$projectId/accept": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdProjectsProjectIdAcceptImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/assignments/$assignmentId/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdAssignmentsRouteImport
    }
    "/_auth/classrooms/$classroomId/teams/join/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdTeamsJoinIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdTeamsRouteImport
    }
    "/_auth/classrooms/$classroomId/assignments/$assignmentId/settings/grading": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsGradingImport
      parentRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteImport
    }
    "/_auth/classrooms/$classroomId/assignments/$assignmentId/grading/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdGradingIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdAssignmentsRouteImport
    }
    "/_auth/classrooms/$classroomId/assignments/$assignmentId/settings/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteImport
    }
    "/_auth/classrooms/$classroomId/projects/$projectId/grading/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdProjectsProjectIdGradingIndexImport
      parentRoute: typeof AuthImport
    }
    "/_auth/classrooms/$classroomId/teams/$teamId/grading/": {
      preLoaderRoute: typeof AuthClassroomsClassroomIdTeamsTeamIdGradingIndexImport
      parentRoute: typeof AuthClassroomsClassroomIdTeamsTeamIdRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([
    AuthClassroomsCreateRoute,
    AuthDashboardCreateRoute,
    AuthClassroomsIndexRoute,
    AuthDashboardIndexRoute,
    AuthClassroomsClassroomIdAssignmentsRouteRoute.addChildren([
      AuthClassroomsClassroomIdAssignmentsCreateRoute,
      AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsRouteRoute.addChildren(
        [
          AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsGradingRoute,
          AuthClassroomsClassroomIdAssignmentsAssignmentIdSettingsIndexRoute,
        ],
      ),
      AuthClassroomsClassroomIdAssignmentsAssignmentIdIndexRoute,
      AuthClassroomsClassroomIdAssignmentsAssignmentIdGradingIndexRoute,
    ]),
    AuthClassroomsClassroomIdSettingsRouteRoute.addChildren([
      AuthClassroomsClassroomIdSettingsGradingRoute,
      AuthClassroomsClassroomIdSettingsIndexRoute,
    ]),
    AuthClassroomsClassroomIdTeamsRouteRoute.addChildren([
      AuthClassroomsClassroomIdTeamsTeamIdRouteRoute.addChildren([
        AuthClassroomsClassroomIdTeamsTeamIdGradingIndexRoute,
      ]),
      AuthClassroomsClassroomIdTeamsIndexRoute,
      AuthClassroomsClassroomIdTeamsJoinIndexRoute,
    ]),
    AuthClassroomsClassroomIdInviteRoute,
    AuthClassroomsClassroomIdIndexRoute,
    AuthClassroomsClassroomIdInvitationsInvitationIdRoute,
    AuthClassroomsClassroomIdGradingIndexRoute,
    AuthClassroomsClassroomIdMembersIndexRoute,
    AuthClassroomsClassroomIdProjectsProjectIdAcceptRoute,
    AuthClassroomsClassroomIdProjectsProjectIdGradingIndexRoute,
  ]),
  LoginRoute,
])

/* prettier-ignore-end */

// Code generated by mockery v2.42.2. DO NOT EDIT.

package api

import (
	fiber "github.com/gofiber/fiber/v2"
	mock "github.com/stretchr/testify/mock"
)

// MockController is an autogenerated mock type for the Controller type
type MockController struct {
	mock.Mock
}

type MockController_Expecter struct {
	mock *mock.Mock
}

func (_m *MockController) EXPECT() *MockController_Expecter {
	return &MockController_Expecter{mock: &_m.Mock}
}

// CreateAssignment provides a mock function with given fields: _a0
func (_m *MockController) CreateAssignment(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for CreateAssignment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_CreateAssignment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateAssignment'
type MockController_CreateAssignment_Call struct {
	*mock.Call
}

// CreateAssignment is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) CreateAssignment(_a0 interface{}) *MockController_CreateAssignment_Call {
	return &MockController_CreateAssignment_Call{Call: _e.mock.On("CreateAssignment", _a0)}
}

func (_c *MockController_CreateAssignment_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_CreateAssignment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_CreateAssignment_Call) Return(_a0 error) *MockController_CreateAssignment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_CreateAssignment_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_CreateAssignment_Call {
	_c.Call.Return(run)
	return _c
}

// CreateClassroom provides a mock function with given fields: _a0
func (_m *MockController) CreateClassroom(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for CreateClassroom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_CreateClassroom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateClassroom'
type MockController_CreateClassroom_Call struct {
	*mock.Call
}

// CreateClassroom is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) CreateClassroom(_a0 interface{}) *MockController_CreateClassroom_Call {
	return &MockController_CreateClassroom_Call{Call: _e.mock.On("CreateClassroom", _a0)}
}

func (_c *MockController_CreateClassroom_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_CreateClassroom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_CreateClassroom_Call) Return(_a0 error) *MockController_CreateClassroom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_CreateClassroom_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_CreateClassroom_Call {
	_c.Call.Return(run)
	return _c
}

// GetJoinedClassroom provides a mock function with given fields: _a0
func (_m *MockController) GetJoinedClassroom(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetJoinedClassroom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetJoinedClassroom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetJoinedClassroom'
type MockController_GetJoinedClassroom_Call struct {
	*mock.Call
}

// GetJoinedClassroom is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetJoinedClassroom(_a0 interface{}) *MockController_GetJoinedClassroom_Call {
	return &MockController_GetJoinedClassroom_Call{Call: _e.mock.On("GetJoinedClassroom", _a0)}
}

func (_c *MockController_GetJoinedClassroom_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetJoinedClassroom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetJoinedClassroom_Call) Return(_a0 error) *MockController_GetJoinedClassroom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetJoinedClassroom_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetJoinedClassroom_Call {
	_c.Call.Return(run)
	return _c
}

// GetJoinedClassroomAssignment provides a mock function with given fields: _a0
func (_m *MockController) GetJoinedClassroomAssignment(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetJoinedClassroomAssignment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetJoinedClassroomAssignment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetJoinedClassroomAssignment'
type MockController_GetJoinedClassroomAssignment_Call struct {
	*mock.Call
}

// GetJoinedClassroomAssignment is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetJoinedClassroomAssignment(_a0 interface{}) *MockController_GetJoinedClassroomAssignment_Call {
	return &MockController_GetJoinedClassroomAssignment_Call{Call: _e.mock.On("GetJoinedClassroomAssignment", _a0)}
}

func (_c *MockController_GetJoinedClassroomAssignment_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetJoinedClassroomAssignment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetJoinedClassroomAssignment_Call) Return(_a0 error) *MockController_GetJoinedClassroomAssignment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetJoinedClassroomAssignment_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetJoinedClassroomAssignment_Call {
	_c.Call.Return(run)
	return _c
}

// GetJoinedClassroomAssignments provides a mock function with given fields: _a0
func (_m *MockController) GetJoinedClassroomAssignments(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetJoinedClassroomAssignments")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetJoinedClassroomAssignments_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetJoinedClassroomAssignments'
type MockController_GetJoinedClassroomAssignments_Call struct {
	*mock.Call
}

// GetJoinedClassroomAssignments is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetJoinedClassroomAssignments(_a0 interface{}) *MockController_GetJoinedClassroomAssignments_Call {
	return &MockController_GetJoinedClassroomAssignments_Call{Call: _e.mock.On("GetJoinedClassroomAssignments", _a0)}
}

func (_c *MockController_GetJoinedClassroomAssignments_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetJoinedClassroomAssignments_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetJoinedClassroomAssignments_Call) Return(_a0 error) *MockController_GetJoinedClassroomAssignments_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetJoinedClassroomAssignments_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetJoinedClassroomAssignments_Call {
	_c.Call.Return(run)
	return _c
}

// GetJoinedClassroomGitlab provides a mock function with given fields: _a0
func (_m *MockController) GetJoinedClassroomGitlab(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetJoinedClassroomGitlab")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetJoinedClassroomGitlab_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetJoinedClassroomGitlab'
type MockController_GetJoinedClassroomGitlab_Call struct {
	*mock.Call
}

// GetJoinedClassroomGitlab is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetJoinedClassroomGitlab(_a0 interface{}) *MockController_GetJoinedClassroomGitlab_Call {
	return &MockController_GetJoinedClassroomGitlab_Call{Call: _e.mock.On("GetJoinedClassroomGitlab", _a0)}
}

func (_c *MockController_GetJoinedClassroomGitlab_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetJoinedClassroomGitlab_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetJoinedClassroomGitlab_Call) Return(_a0 error) *MockController_GetJoinedClassroomGitlab_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetJoinedClassroomGitlab_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetJoinedClassroomGitlab_Call {
	_c.Call.Return(run)
	return _c
}

// GetJoinedClassrooms provides a mock function with given fields: _a0
func (_m *MockController) GetJoinedClassrooms(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetJoinedClassrooms")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetJoinedClassrooms_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetJoinedClassrooms'
type MockController_GetJoinedClassrooms_Call struct {
	*mock.Call
}

// GetJoinedClassrooms is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetJoinedClassrooms(_a0 interface{}) *MockController_GetJoinedClassrooms_Call {
	return &MockController_GetJoinedClassrooms_Call{Call: _e.mock.On("GetJoinedClassrooms", _a0)}
}

func (_c *MockController_GetJoinedClassrooms_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetJoinedClassrooms_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetJoinedClassrooms_Call) Return(_a0 error) *MockController_GetJoinedClassrooms_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetJoinedClassrooms_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetJoinedClassrooms_Call {
	_c.Call.Return(run)
	return _c
}

// GetMe provides a mock function with given fields: _a0
func (_m *MockController) GetMe(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetMe")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetMe_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMe'
type MockController_GetMe_Call struct {
	*mock.Call
}

// GetMe is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetMe(_a0 interface{}) *MockController_GetMe_Call {
	return &MockController_GetMe_Call{Call: _e.mock.On("GetMe", _a0)}
}

func (_c *MockController_GetMe_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetMe_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetMe_Call) Return(_a0 error) *MockController_GetMe_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetMe_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetMe_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroom provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroom(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroom'
type MockController_GetOwnedClassroom_Call struct {
	*mock.Call
}

// GetOwnedClassroom is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroom(_a0 interface{}) *MockController_GetOwnedClassroom_Call {
	return &MockController_GetOwnedClassroom_Call{Call: _e.mock.On("GetOwnedClassroom", _a0)}
}

func (_c *MockController_GetOwnedClassroom_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroom_Call) Return(_a0 error) *MockController_GetOwnedClassroom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroom_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroom_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomAssignment provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomAssignment(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomAssignment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomAssignment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomAssignment'
type MockController_GetOwnedClassroomAssignment_Call struct {
	*mock.Call
}

// GetOwnedClassroomAssignment is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomAssignment(_a0 interface{}) *MockController_GetOwnedClassroomAssignment_Call {
	return &MockController_GetOwnedClassroomAssignment_Call{Call: _e.mock.On("GetOwnedClassroomAssignment", _a0)}
}

func (_c *MockController_GetOwnedClassroomAssignment_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomAssignment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignment_Call) Return(_a0 error) *MockController_GetOwnedClassroomAssignment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignment_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomAssignment_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomAssignmentProject provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomAssignmentProject(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomAssignmentProject")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomAssignmentProject_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomAssignmentProject'
type MockController_GetOwnedClassroomAssignmentProject_Call struct {
	*mock.Call
}

// GetOwnedClassroomAssignmentProject is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomAssignmentProject(_a0 interface{}) *MockController_GetOwnedClassroomAssignmentProject_Call {
	return &MockController_GetOwnedClassroomAssignmentProject_Call{Call: _e.mock.On("GetOwnedClassroomAssignmentProject", _a0)}
}

func (_c *MockController_GetOwnedClassroomAssignmentProject_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomAssignmentProject_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignmentProject_Call) Return(_a0 error) *MockController_GetOwnedClassroomAssignmentProject_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignmentProject_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomAssignmentProject_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomAssignmentProjectGitlab provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomAssignmentProjectGitlab(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomAssignmentProjectGitlab")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomAssignmentProjectGitlab_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomAssignmentProjectGitlab'
type MockController_GetOwnedClassroomAssignmentProjectGitlab_Call struct {
	*mock.Call
}

// GetOwnedClassroomAssignmentProjectGitlab is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomAssignmentProjectGitlab(_a0 interface{}) *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call {
	return &MockController_GetOwnedClassroomAssignmentProjectGitlab_Call{Call: _e.mock.On("GetOwnedClassroomAssignmentProjectGitlab", _a0)}
}

func (_c *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call) Return(_a0 error) *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomAssignmentProjectGitlab_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomAssignmentProjects provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomAssignmentProjects(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomAssignmentProjects")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomAssignmentProjects_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomAssignmentProjects'
type MockController_GetOwnedClassroomAssignmentProjects_Call struct {
	*mock.Call
}

// GetOwnedClassroomAssignmentProjects is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomAssignmentProjects(_a0 interface{}) *MockController_GetOwnedClassroomAssignmentProjects_Call {
	return &MockController_GetOwnedClassroomAssignmentProjects_Call{Call: _e.mock.On("GetOwnedClassroomAssignmentProjects", _a0)}
}

func (_c *MockController_GetOwnedClassroomAssignmentProjects_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomAssignmentProjects_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignmentProjects_Call) Return(_a0 error) *MockController_GetOwnedClassroomAssignmentProjects_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignmentProjects_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomAssignmentProjects_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomAssignments provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomAssignments(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomAssignments")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomAssignments_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomAssignments'
type MockController_GetOwnedClassroomAssignments_Call struct {
	*mock.Call
}

// GetOwnedClassroomAssignments is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomAssignments(_a0 interface{}) *MockController_GetOwnedClassroomAssignments_Call {
	return &MockController_GetOwnedClassroomAssignments_Call{Call: _e.mock.On("GetOwnedClassroomAssignments", _a0)}
}

func (_c *MockController_GetOwnedClassroomAssignments_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomAssignments_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignments_Call) Return(_a0 error) *MockController_GetOwnedClassroomAssignments_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomAssignments_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomAssignments_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomGitlab provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomGitlab(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomGitlab")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomGitlab_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomGitlab'
type MockController_GetOwnedClassroomGitlab_Call struct {
	*mock.Call
}

// GetOwnedClassroomGitlab is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomGitlab(_a0 interface{}) *MockController_GetOwnedClassroomGitlab_Call {
	return &MockController_GetOwnedClassroomGitlab_Call{Call: _e.mock.On("GetOwnedClassroomGitlab", _a0)}
}

func (_c *MockController_GetOwnedClassroomGitlab_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomGitlab_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomGitlab_Call) Return(_a0 error) *MockController_GetOwnedClassroomGitlab_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomGitlab_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomGitlab_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomInvitations provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomInvitations(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomInvitations")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomInvitations_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomInvitations'
type MockController_GetOwnedClassroomInvitations_Call struct {
	*mock.Call
}

// GetOwnedClassroomInvitations is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomInvitations(_a0 interface{}) *MockController_GetOwnedClassroomInvitations_Call {
	return &MockController_GetOwnedClassroomInvitations_Call{Call: _e.mock.On("GetOwnedClassroomInvitations", _a0)}
}

func (_c *MockController_GetOwnedClassroomInvitations_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomInvitations_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomInvitations_Call) Return(_a0 error) *MockController_GetOwnedClassroomInvitations_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomInvitations_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomInvitations_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomMembers provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomMembers(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomMembers")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomMembers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomMembers'
type MockController_GetOwnedClassroomMembers_Call struct {
	*mock.Call
}

// GetOwnedClassroomMembers is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomMembers(_a0 interface{}) *MockController_GetOwnedClassroomMembers_Call {
	return &MockController_GetOwnedClassroomMembers_Call{Call: _e.mock.On("GetOwnedClassroomMembers", _a0)}
}

func (_c *MockController_GetOwnedClassroomMembers_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomMembers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomMembers_Call) Return(_a0 error) *MockController_GetOwnedClassroomMembers_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomMembers_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomMembers_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassroomTemplates provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassroomTemplates(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassroomTemplates")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassroomTemplates_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassroomTemplates'
type MockController_GetOwnedClassroomTemplates_Call struct {
	*mock.Call
}

// GetOwnedClassroomTemplates is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassroomTemplates(_a0 interface{}) *MockController_GetOwnedClassroomTemplates_Call {
	return &MockController_GetOwnedClassroomTemplates_Call{Call: _e.mock.On("GetOwnedClassroomTemplates", _a0)}
}

func (_c *MockController_GetOwnedClassroomTemplates_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassroomTemplates_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassroomTemplates_Call) Return(_a0 error) *MockController_GetOwnedClassroomTemplates_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassroomTemplates_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassroomTemplates_Call {
	_c.Call.Return(run)
	return _c
}

// GetOwnedClassrooms provides a mock function with given fields: _a0
func (_m *MockController) GetOwnedClassrooms(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for GetOwnedClassrooms")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_GetOwnedClassrooms_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOwnedClassrooms'
type MockController_GetOwnedClassrooms_Call struct {
	*mock.Call
}

// GetOwnedClassrooms is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) GetOwnedClassrooms(_a0 interface{}) *MockController_GetOwnedClassrooms_Call {
	return &MockController_GetOwnedClassrooms_Call{Call: _e.mock.On("GetOwnedClassrooms", _a0)}
}

func (_c *MockController_GetOwnedClassrooms_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_GetOwnedClassrooms_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_GetOwnedClassrooms_Call) Return(_a0 error) *MockController_GetOwnedClassrooms_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_GetOwnedClassrooms_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_GetOwnedClassrooms_Call {
	_c.Call.Return(run)
	return _c
}

// InviteToAssignmentProject provides a mock function with given fields: _a0
func (_m *MockController) InviteToAssignmentProject(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for InviteToAssignmentProject")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_InviteToAssignmentProject_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InviteToAssignmentProject'
type MockController_InviteToAssignmentProject_Call struct {
	*mock.Call
}

// InviteToAssignmentProject is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) InviteToAssignmentProject(_a0 interface{}) *MockController_InviteToAssignmentProject_Call {
	return &MockController_InviteToAssignmentProject_Call{Call: _e.mock.On("InviteToAssignmentProject", _a0)}
}

func (_c *MockController_InviteToAssignmentProject_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_InviteToAssignmentProject_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_InviteToAssignmentProject_Call) Return(_a0 error) *MockController_InviteToAssignmentProject_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_InviteToAssignmentProject_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_InviteToAssignmentProject_Call {
	_c.Call.Return(run)
	return _c
}

// InviteToClassroom provides a mock function with given fields: _a0
func (_m *MockController) InviteToClassroom(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for InviteToClassroom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_InviteToClassroom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'InviteToClassroom'
type MockController_InviteToClassroom_Call struct {
	*mock.Call
}

// InviteToClassroom is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) InviteToClassroom(_a0 interface{}) *MockController_InviteToClassroom_Call {
	return &MockController_InviteToClassroom_Call{Call: _e.mock.On("InviteToClassroom", _a0)}
}

func (_c *MockController_InviteToClassroom_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_InviteToClassroom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_InviteToClassroom_Call) Return(_a0 error) *MockController_InviteToClassroom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_InviteToClassroom_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_InviteToClassroom_Call {
	_c.Call.Return(run)
	return _c
}

// JoinAssignment provides a mock function with given fields: _a0
func (_m *MockController) JoinAssignment(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for JoinAssignment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_JoinAssignment_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'JoinAssignment'
type MockController_JoinAssignment_Call struct {
	*mock.Call
}

// JoinAssignment is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) JoinAssignment(_a0 interface{}) *MockController_JoinAssignment_Call {
	return &MockController_JoinAssignment_Call{Call: _e.mock.On("JoinAssignment", _a0)}
}

func (_c *MockController_JoinAssignment_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_JoinAssignment_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_JoinAssignment_Call) Return(_a0 error) *MockController_JoinAssignment_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_JoinAssignment_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_JoinAssignment_Call {
	_c.Call.Return(run)
	return _c
}

// JoinClassroom provides a mock function with given fields: _a0
func (_m *MockController) JoinClassroom(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for JoinClassroom")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_JoinClassroom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'JoinClassroom'
type MockController_JoinClassroom_Call struct {
	*mock.Call
}

// JoinClassroom is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) JoinClassroom(_a0 interface{}) *MockController_JoinClassroom_Call {
	return &MockController_JoinClassroom_Call{Call: _e.mock.On("JoinClassroom", _a0)}
}

func (_c *MockController_JoinClassroom_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_JoinClassroom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_JoinClassroom_Call) Return(_a0 error) *MockController_JoinClassroom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_JoinClassroom_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_JoinClassroom_Call {
	_c.Call.Return(run)
	return _c
}

// JoinedClassroomAssignmentMiddleware provides a mock function with given fields: _a0
func (_m *MockController) JoinedClassroomAssignmentMiddleware(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for JoinedClassroomAssignmentMiddleware")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_JoinedClassroomAssignmentMiddleware_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'JoinedClassroomAssignmentMiddleware'
type MockController_JoinedClassroomAssignmentMiddleware_Call struct {
	*mock.Call
}

// JoinedClassroomAssignmentMiddleware is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) JoinedClassroomAssignmentMiddleware(_a0 interface{}) *MockController_JoinedClassroomAssignmentMiddleware_Call {
	return &MockController_JoinedClassroomAssignmentMiddleware_Call{Call: _e.mock.On("JoinedClassroomAssignmentMiddleware", _a0)}
}

func (_c *MockController_JoinedClassroomAssignmentMiddleware_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_JoinedClassroomAssignmentMiddleware_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_JoinedClassroomAssignmentMiddleware_Call) Return(_a0 error) *MockController_JoinedClassroomAssignmentMiddleware_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_JoinedClassroomAssignmentMiddleware_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_JoinedClassroomAssignmentMiddleware_Call {
	_c.Call.Return(run)
	return _c
}

// JoinedClassroomMiddleware provides a mock function with given fields: _a0
func (_m *MockController) JoinedClassroomMiddleware(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for JoinedClassroomMiddleware")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_JoinedClassroomMiddleware_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'JoinedClassroomMiddleware'
type MockController_JoinedClassroomMiddleware_Call struct {
	*mock.Call
}

// JoinedClassroomMiddleware is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) JoinedClassroomMiddleware(_a0 interface{}) *MockController_JoinedClassroomMiddleware_Call {
	return &MockController_JoinedClassroomMiddleware_Call{Call: _e.mock.On("JoinedClassroomMiddleware", _a0)}
}

func (_c *MockController_JoinedClassroomMiddleware_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_JoinedClassroomMiddleware_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_JoinedClassroomMiddleware_Call) Return(_a0 error) *MockController_JoinedClassroomMiddleware_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_JoinedClassroomMiddleware_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_JoinedClassroomMiddleware_Call {
	_c.Call.Return(run)
	return _c
}

// OwnedClassroomAssignmentMiddleware provides a mock function with given fields: _a0
func (_m *MockController) OwnedClassroomAssignmentMiddleware(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for OwnedClassroomAssignmentMiddleware")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_OwnedClassroomAssignmentMiddleware_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OwnedClassroomAssignmentMiddleware'
type MockController_OwnedClassroomAssignmentMiddleware_Call struct {
	*mock.Call
}

// OwnedClassroomAssignmentMiddleware is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) OwnedClassroomAssignmentMiddleware(_a0 interface{}) *MockController_OwnedClassroomAssignmentMiddleware_Call {
	return &MockController_OwnedClassroomAssignmentMiddleware_Call{Call: _e.mock.On("OwnedClassroomAssignmentMiddleware", _a0)}
}

func (_c *MockController_OwnedClassroomAssignmentMiddleware_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_OwnedClassroomAssignmentMiddleware_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_OwnedClassroomAssignmentMiddleware_Call) Return(_a0 error) *MockController_OwnedClassroomAssignmentMiddleware_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_OwnedClassroomAssignmentMiddleware_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_OwnedClassroomAssignmentMiddleware_Call {
	_c.Call.Return(run)
	return _c
}

// OwnedClassroomAssignmentProjectMiddleware provides a mock function with given fields: _a0
func (_m *MockController) OwnedClassroomAssignmentProjectMiddleware(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for OwnedClassroomAssignmentProjectMiddleware")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_OwnedClassroomAssignmentProjectMiddleware_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OwnedClassroomAssignmentProjectMiddleware'
type MockController_OwnedClassroomAssignmentProjectMiddleware_Call struct {
	*mock.Call
}

// OwnedClassroomAssignmentProjectMiddleware is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) OwnedClassroomAssignmentProjectMiddleware(_a0 interface{}) *MockController_OwnedClassroomAssignmentProjectMiddleware_Call {
	return &MockController_OwnedClassroomAssignmentProjectMiddleware_Call{Call: _e.mock.On("OwnedClassroomAssignmentProjectMiddleware", _a0)}
}

func (_c *MockController_OwnedClassroomAssignmentProjectMiddleware_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_OwnedClassroomAssignmentProjectMiddleware_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_OwnedClassroomAssignmentProjectMiddleware_Call) Return(_a0 error) *MockController_OwnedClassroomAssignmentProjectMiddleware_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_OwnedClassroomAssignmentProjectMiddleware_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_OwnedClassroomAssignmentProjectMiddleware_Call {
	_c.Call.Return(run)
	return _c
}

// OwnedClassroomMiddleware provides a mock function with given fields: _a0
func (_m *MockController) OwnedClassroomMiddleware(_a0 *fiber.Ctx) error {
	ret := _m.Called(_a0)

	if len(ret) == 0 {
		panic("no return value specified for OwnedClassroomMiddleware")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockController_OwnedClassroomMiddleware_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'OwnedClassroomMiddleware'
type MockController_OwnedClassroomMiddleware_Call struct {
	*mock.Call
}

// OwnedClassroomMiddleware is a helper method to define mock.On call
//   - _a0 *fiber.Ctx
func (_e *MockController_Expecter) OwnedClassroomMiddleware(_a0 interface{}) *MockController_OwnedClassroomMiddleware_Call {
	return &MockController_OwnedClassroomMiddleware_Call{Call: _e.mock.On("OwnedClassroomMiddleware", _a0)}
}

func (_c *MockController_OwnedClassroomMiddleware_Call) Run(run func(_a0 *fiber.Ctx)) *MockController_OwnedClassroomMiddleware_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*fiber.Ctx))
	})
	return _c
}

func (_c *MockController_OwnedClassroomMiddleware_Call) Return(_a0 error) *MockController_OwnedClassroomMiddleware_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockController_OwnedClassroomMiddleware_Call) RunAndReturn(run func(*fiber.Ctx) error) *MockController_OwnedClassroomMiddleware_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockController creates a new instance of MockController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockController(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockController {
	mock := &MockController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
